@model Presentation.ViewModels.ProductVM


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title">Create</h4>
    </div>
    <div class="modal-body">

        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>

            @*<div class="form-group">
                @Html.Label("Category",htmlAttributes: new { @class = "control-label"})
                @Html.DropDownListFor(model => model.Categories,new SelectList(Model.Categories,"","Select a Category"));
                @Html.ValidationMessageFor(model => model.Categories, "", new { @class = "text-danger" })
            </div>*@

        </div>
      <div>
            @*@Html.ActionLink("Back to List", "Index")*@
        </div>
      </div>

    <div class="modal-footer">
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-success" />
            <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
}
        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
